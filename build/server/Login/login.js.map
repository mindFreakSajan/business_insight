{"version":3,"sources":["../../../src/server/Login/login.js"],"names":["MongoClient","Mongo","url","dbName","apis","method","path","handler","request","reply","console","log","data","payload","connectToDB","then","findDocuments","db","username","docs","length","requiredDoc","password","success","catch","err","findAllDocuments","Promise","resolve","reject","collection","find","toArray","connect","client","listOfApi","concat"],"mappings":"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","file":"login.js","sourcesContent":["import Mongo from 'mongodb';\nconst MongoClient = Mongo.MongoClient;\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'test';\n\nconst apis = [\n    {\n        method: 'POST',\n        path: '/login',\n        handler: (request, reply) => {\n            console.log(\"inside login api\")\n            let data = request.payload.data;\n            console.log(data);\n\n            connectToDB()\n                .then(db => findDocuments(db, data.username))\n                .then((docs) => {\n                    console.log(docs);\n\n                    if (docs.length > 0 && docs[0] !== null) {\n                        const requiredDoc = docs[0];\n                        if (requiredDoc.password === data.password) {\n                            reply({ success: true });\n                        } else {\n                            reply({ success: false });\n                        }\n                    } else {\n                        console.log(\"false\")\n                        reply({ success: false });\n                    }\n                })\n                .catch(err => {\n                    console.log(\"error: \" + err);\n                });\n        },\n    },\n\n    {\n        method: 'GET',\n        path: '/users',\n        handler: (request, reply) => {\n\n            connectToDB()\n                .then(db => findAllDocuments(db))\n                .then((docs) => {\n                    reply(docs);\n                })\n                .catch(err => {\n                    console.log(\"error: \" + err);\n                });\n        },\n    },\n    {\n        method: 'GET',\n        path: '/hello',\n        handler: (request, reply) => {\n            reply(\"Hello World\");\n        },\n    }\n]\n\nconst findDocuments = (db, username) => new Promise((resolve, reject) => {\n    // Get the documents collection\n    const collection = db.collection('login');\n    // Find some documents\n    collection.find({ username }).toArray((err, docs) => {\n        if (err) {\n            reject(err);\n        }\n        console.log(\"Found the following records\");\n        resolve(docs);\n    });\n})\n\nconst findAllDocuments = (db) => new Promise((resolve, reject) => {\n    // Get the documents collection\n    const collection = db.collection('login');\n    // Find some documents\n    collection.find().toArray((err, docs) => {\n        if (err) {\n            reject(err);\n        }\n        console.log(\"Found the following records\");\n        resolve(docs);\n    });\n})\n\nconst connectToDB = () => {\n    return new Promise((resolve, reject) => {\n        MongoClient.connect(url, (err, client) => {\n            if (err) {\n                reject(err);\n            }\n            console.log(\"Connected successfully to server\");\n\n            const db = client.db(dbName);\n            resolve(db);\n        });\n    })\n}\n\nconst listOfApi = apis.concat();\nexport default listOfApi;"]}
{"version":3,"sources":["../../../src/client/containers/FormPage.js"],"names":["FormPage","props","onChangeHandler1","setNameText","e","target","value","onChangeHandler2","setPriceText","handleChange1","event","index","setCategoryText","handleChange2","console","log","toString","setExpDateText","styles","toggleDiv","maxWidth","marginTop","marginBottom","toggleLabel","color","grey400","fontWeight","buttons","float","saveButton","marginLeft","name","parseInt","price","category","Date","expirationdate","React","Component","mapStateToProps","state","form","mapDispatchToProps","save","dispatch","propTypes","PropTypes","func","isRequired","string"],"mappings":"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","file":"FormPage.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport MenuItem from 'material-ui/MenuItem';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport Toggle from 'material-ui/Toggle';\nimport DatePicker from 'material-ui/DatePicker';\nimport {grey400} from 'material-ui/styles/colors';\nimport Divider from 'material-ui/Divider';\nimport PageBase from '../components/PageBase';\nimport { setNameText,setPriceText,setCategoryText,setExpDateText,save} from './FormPageModule';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass FormPage extends React.Component{\n  constructor(props){\n    super(props)\n   this.styles = {\n    toggleDiv: {\n      maxWidth: 300,\n      marginTop: 40,\n      marginBottom: 5\n    },\n    toggleLabel: {\n      color: grey400,\n      fontWeight: 100\n    },\n    buttons: {\n      marginTop: 30,\n      float: 'right'\n    },\n    saveButton: {\n      marginLeft: 5\n    }\n  };\n  }\n  onChangeHandler1=e=>{\n    this.props.setNameText(e.target.value);\n  }\n  onChangeHandler2=e=>{\n    this.props.setPriceText(e.target.value);\n  }\n  handleChange1 = (event, index, value) =>{ \n    this.props.setCategoryText(value)\n  };\n  handleChange2 = (event,value) =>{\n    console.log(value.toString());\n    this.props.setExpDateText(value.toString());\n    };\n    \n  render(){\n  return (\n    <PageBase title=\"Add Product\"\n              navigation=\"Application / Add Product\">\n      <form>\n\n        <TextField\n          hintText=\"Name\"\n          floatingLabelText=\"Name\"\n          fullWidth={true}\n          value={this.props.name}\n          onChange={this.onChangeHandler1}\n        />\n\n        <TextField\n          hintText=\"Price\"\n          floatingLabelText=\"Price\"\n          fullWidth={true}\n          type=\"number\"\n          value={parseInt(this.props.price)}\n          onChange={this.onChangeHandler2}\n        />\n\n        <SelectField\n          floatingLabelText=\"Category\"\n          value={this.props.category}\n          fullWidth={true}\n          onChange={this.handleChange1}>\n          <MenuItem key={0} value=\"Conditioners\" primaryText=\"Conditioners\"/>\n          <MenuItem key={1} value=\"Tv\" primaryText=\"TV\"/>\n          <MenuItem key={2} value=\"Mobiles\" primaryText=\"Mobiles\"/>\n          <MenuItem key={3} value=\"Computers\" primaryText=\"Computers\"/>\n        </SelectField>\n\n        <DatePicker\n          hintText=\"Expiration Date\"\n          floatingLabelText=\"Expiration Date\"\n          fullWidth={true}\n          value={new Date(this.props.expirationdate)}\n          onChange={this.handleChange2}/>\n\n        <div style={this.styles.toggleDiv}>\n          <Toggle\n            label=\"Disabled\"\n            labelStyle={this.styles.toggleLabel}\n          />\n        </div>\n\n        <Divider/>\n\n        <div style={this.styles.buttons}>\n          <Link to=\"/\">\n            <RaisedButton label=\"Cancel\"/>\n          </Link>\n\n          <RaisedButton label=\"Save\"\n                        style={this.styles.saveButton}\n                        type=\"submit\"\n                        primary={true}/>\n        </div>\n      </form>\n    </PageBase>\n  );\n  }\n};\nconst mapStateToProps = state => ({\n  name:state.form.name,\n  price:state.form.price,\n  category:state.form.category,\n  expirationdate:state.form.expirationdate,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setNameText,\n  setPriceText,\n  setCategoryText,\n  setExpDateText,\n  save\n}, dispatch);\n\nFormPage.propTypes = {\n  setNameText: PropTypes.func.isRequired,\n  setPriceText: PropTypes.func.isRequired,\n  setCategoryText: PropTypes.func.isRequired,\n  setExpDateText: PropTypes.func.isRequired,\n  save: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  expirationdate: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormPage);\n\n"]}
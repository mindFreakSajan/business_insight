{"version":3,"sources":["../../../src/client/components/SearchBoxModule.js"],"names":["SET_SEARCH_TEXT","SEARCH","setSearchText","type","searchtext","search","console","log","data","initialState","state","action"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA,IAAMA,kBAAkB,iBAAxB;AACA,IAAMC,SAAS,QAAf;AACA;AACO,IAAMC,wCAAgB,SAAhBA,aAAgB,aAAc;AACvC,WAAO;AACHC,cAAMH,eADH;AAEHI,8BAFG,CAEO;AAFP,KAAP;AAIH,CALM;;AAOA,IAAMC,0BAAS,SAATA,MAAS,OAAQ;AAC1BC,YAAQC,GAAR,CAAYC,IAAZ;AACA,WAAO;AACHL,cAAME,MADH;AAEHG,cAAMA;AAFH,KAAP;AAIH,CANM;AAOP;AACA,IAAMC,eAAe;AACjBL,gBAAY;;AAGhB;AAJqB,CAArB;kBAKgB,YAAkC;AAAA,QAAjCM,KAAiC,uEAAzBD,YAAyB;AAAA,QAAXE,MAAW;;AAC9C,YAAQA,OAAOR,IAAf;AACI,aAAKH,eAAL;AACI,gCAAYU,KAAZ,IAAmBN,YAAYO,OAAOP,UAAtC;;AAEJ;AACI,mBAAOM,KAAP;AALR;AAOH,C;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchBoxModule.js","sourcesContent":["import { Observable } from \"rxjs\";\nimport 'rxjs/add/operator/mergeMap';\nimport {ajax} from 'rxjs/observable/dom/ajax';\nimport {browserHistory} from 'react-router';\n\n//modules contain related action creators,store,reducers and epics\nconst SET_SEARCH_TEXT = 'SET_SEARCH_TEXT';\nconst SEARCH = \"SEARCH\";\n//action creator\nexport const setSearchText = searchtext => {\n    return {\n        type: SET_SEARCH_TEXT,\n        searchtext//key and value same name use one name only\n    };\n};\n\nexport const search = data => {\n    console.log(data);\n    return {\n        type: search,\n        data: data\n    };\n};\n//store for login\nconst initialState = {\n    searchtext: \"\",\n}\n\n//reducer for login\nexport default ((state = initialState, action) => {\n    switch (action.type) {\n        case SET_SEARCH_TEXT:\n            return { ...state, searchtext: action.searchtext };\n\n        default:\n            return state;\n    }\n});\n\n// const handleLoginResponse=(response)=>{\n//     const resp=response.response;\n//     console.log(\"response from server: \"+JSON.stringify(response));\n//     if(resp.success==true){\n//         browserHistory.push('/');\n//     }else{\n//         console.log(\"not matched\");\n//         alert(\"username/password not matched\");\n//       //  browserHistory.push('/login');\n//     }\n//     return Observable.of({type:''});//for mergeMap\n//     //return {type:\"\"}; for switchMap\n// }\n//epics\n// export function searchEpic(action$){\n//     return action$.ofType(LOGIN)\n//     .switchMap(action=>\n//         ajax({\n//            url:'/search',\n//            method:'POST',\n//            timeout: 30000,\n//            headers:{'Content-Type':'application/json'},\n//            body:{data:action.data} \n//         })\n//         .mergeMap(response=>handleLoginResponse(response))\n//         .catch(error=>console.log(\"error: \"+error))\n//         );\n// }"]}